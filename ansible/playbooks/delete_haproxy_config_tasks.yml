---
- name: Get current configuration version
  uri:
    url: "{{ haproxy_url }}/configuration/version"
    method: GET
    user: "{{ haproxy_api_user }}"
    password: "{{ haproxy_api_password }}"
    force_basic_auth: yes
    status_code: 200
  register: config_version

- name: Start a new transaction
  uri:
    url: "{{ haproxy_url }}/transactions?version={{ config_version.json }}"
    method: POST
    user: "{{ haproxy_api_user }}"
    password: "{{ haproxy_api_password }}"
    body_format: json
    headers:
      Content-Type: "application/json"
    status_code: 201
  register: transaction

- name: Set transaction ID
  set_fact:
    transaction_id: "{{ transaction.json.id }}"

- name: Check if backend exists
  uri:
    url: "{{ haproxy_url }}/configuration/backends/{{ backend_name }}"
    method: GET
    user: "{{ haproxy_api_user }}"
    password: "{{ haproxy_api_password }}"
    force_basic_auth: yes
    status_code: [200, 404]
  register: backend_check

- name: Delete backend if it exists
  uri:
    url: "{{ haproxy_url }}/configuration/backends/{{ backend_name }}?transaction_id={{ transaction_id }}"
    method: DELETE
    user: "{{ haproxy_api_user }}"
    password: "{{ haproxy_api_password }}"
    body_format: json
    headers:
      Content-Type: "application/json"
    status_code: 202
  when: backend_check.status == 200

- name: Check if frontend exists
  uri:
    url: "{{ haproxy_url }}/configuration/frontends/{{ frontend_name }}"
    method: GET
    user: "{{ haproxy_api_user }}"
    password: "{{ haproxy_api_password }}"
    force_basic_auth: yes
    status_code: [200, 404]
  register: frontend_check

- name: Delete frontend if it exists
  uri:
    url: "{{ haproxy_url }}/configuration/frontends/{{ frontend_name }}?transaction_id={{ transaction_id }}"
    method: DELETE
    user: "{{ haproxy_api_user }}"
    password: "{{ haproxy_api_password }}"
    body_format: json
    headers:
      Content-Type: "application/json"
    status_code: 202
  when: frontend_check.status == 200

- name: Commit the transaction
  uri:
    url: "{{ haproxy_url }}/transactions/{{ transaction_id }}"
    method: PUT
    user: "{{ haproxy_api_user }}"
    password: "{{ haproxy_api_password }}"
    body_format: json
    headers:
      Content-Type: "application/json"
    status_code: 202
