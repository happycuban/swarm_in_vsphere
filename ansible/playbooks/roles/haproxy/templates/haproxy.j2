global
  maxconn 50000
  maxpipes 50000
  tune.maxaccept 500
  log 127.0.0.1 local0
  log 127.0.0.1 local1 notice
  chroot /var/lib/haproxy
  stats socket /run/haproxy/admin.sock user haproxy group haproxy mode 660 level admin expose-fd listeners
  log stdout format raw local0 info
  stats timeout 30s
  user haproxy
  group haproxy

  # Default SSL material locations
  ca-base /etc/ssl/certs
  crt-base /etc/ssl/private

  # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
  ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
  ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
  ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets


defaults
  log     global
  mode    http
  option  httplog
  option  dontlognull
  timeout connect 3s
  timeout client  30s
  timeout server  300s
  timeout http-request 30s
  errorfile 400 /usr/local/etc/haproxy/errors/400.http
  errorfile 403 /usr/local/etc/haproxy/errors/403.http
  errorfile 408 /usr/local/etc/haproxy/errors/408.http
  errorfile 500 /usr/local/etc/haproxy/errors/500.http
  errorfile 502 /usr/local/etc/haproxy/errors/502.http
  errorfile 503 /usr/local/etc/haproxy/errors/503.http
  errorfile 504 /usr/local/etc/haproxy/errors/504.http

frontend stats
    bind :8404
    http-request use-service prometheus-exporter if { path /metrics }
    stats enable
    stats hide-version
    stats show-node
    stats uri /stats
    stats refresh 30s
    stats realm Haproxy_dev\ Statistics
    stats admin if TRUE
    #stats auth {{haproxy_stats_user}}:{{haproxy_stats_password}}

frontend default80
  bind :80
  mode http
  reqadd X-Forwarded-Proto:\ http
  http-request redirect scheme https code 301 unless { ssl_fc }

frontend default
  bind :443 ssl crt /etc/ssl/certs/server-mindworking.local.pem
  mode http
  reqadd X-Forwarded-Proto:\ https

  acl ACL_docker_dev hdr_end(host) -i .dev.mindworking.local
  use_backend swarm_dev if ACL_docker_dev

backend swarm_dev
  balance static-rr
  option tcp-check
  option forwarded
  server dev-mgr-01 {{groups['swarm_managers'][0]}}:80 check
  server dev-mgr-02 {{groups['swarm_managers'][1]}}:80 check
  server dev-mgr-03 {{groups['swarm_managers'][2]}}:80 check

defaults REDIS
  mode tcp
  timeout connect  4s
  timeout server  30s
  timeout client  30s
frontend ft_redis
  bind :6379 name redis
  default_backend bk_redis
backend bk_redis
  option tcp-check
  tcp-check send "PING\r\n"
  tcp-check expect string +PONG
  tcp-check send "info replication\r\n"
  tcp-check expect string role:master
  tcp-check send "QUIT\r\n"
  tcp-check expect string +OK
  server dev-mgr-01 {{groups['swarm_managers'][0]}}:6379 check inter 1s
  server dev-mgr-02 {{groups['swarm_managers'][1]}}:6379 check inter 1s
  server dev-mgr-03 {{groups['swarm_managers'][2]}}:6379 check inter 1s

defaults ELASTIC
  mode tcp
  timeout connect  5000
  timeout client  10000
  timeout server  10000
frontend ft_elastic
  bind :9200 name elastic
  default_backend bk_elastic
backend bk_elastic
  option tcp-check
  server dev-mgr-01 {{groups['swarm_managers'][0]}}:9200 check inter 1s
  server dev-mgr-02 {{groups['swarm_managers'][1]}}:9200 check inter 1s
  server dev-mgr-03 {{groups['swarm_managers'][1]}}:9200 check inter 1s
