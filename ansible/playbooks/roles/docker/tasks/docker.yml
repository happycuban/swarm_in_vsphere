---
- name: Install Docker Python library
  become: true
  become_method: sudo
  pip:
    name: docker

- name: Remove old versions of Docker
  become: true
  become_method: sudo
  apt:
    state: absent
    pkg:
      - docker
      - docker-engine
      - docker.io
      - containerd
      - runc
    force_apt_get: true

- name: Install required packages
  apt:
    name: lsb-release,ca-certificates,apt-transport-https,software-properties-common
    state: present
    update_cache: yes

- name: Add Docker GPG apt Key
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
    keyring: /usr/share/keyrings/docker-archive-keyring.gpg

- name: Add Docker repository to APT sources list
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable"
    state: present
    filename: docker

- name: Update APT cache
  become: true
  apt:
    update_cache: yes

- name: Check Docker package policy
  command: apt-cache policy docker-ce
  become_user: root

- name: Install Docker CE
  apt:
    name: docker-ce
    state: present
    update_cache: yes

- name: Add "{{ansible_user}}" user to "docker" group
  become: true
  become_method: sudo
  shell: "adduser {{ansible_user}} docker"

- name: Waiting for Docker service to become available
  wait_for:
    path: /var/run/docker.sock

- name: Create the directory for Docker Compose plugins
  file:
    path: "~/.docker/cli-plugins"
    state: directory
  become: true

- name: Download Docker Compose binary
  get_url:
    url: "https://github.com/docker/compose/releases/download/v2.16.0/docker-compose-linux-x86_64"
    dest: "~/.docker/cli-plugins/docker-compose"
  become: true

- name: Set execute permissions for Docker Compose
  file:
    path: "~/.docker/cli-plugins/docker-compose"
    mode: "+x"
  become: true

- name: Reboot host(s) after Docker install
  shell: sleep 2 && /sbin/shutdown -r now "ansible reboot request"
  async: 1
  poll: 0
  ignore_errors: true
  become: true
  become_method: sudo
  when: inventory_hostname != "127.0.0.1" and inventory_hostname != "localhost"

- name: Waiting for host(s) to reboot
  ansible.builtin.wait_for_connection:
    delay: 60
    timeout: 300
  when: inventory_hostname != "127.0.0.1" and inventory_hostname != "localhost"